---
import { Container } from '@components/layout'
import { Icon } from 'astro-icon/components'
import { AuroraBackground } from '@components/sections/hero/components'

export interface Props {
  title: string[]
  description: string
  trustText?: string
  trustCount?: string
  primaryButton: {
    text: string
    href: string
    icon?: string
  }
  secondaryButton: {
    text: string
    href: string
    icon?: string
  }
  heroImage: any
  showAurora?: boolean
  layout?: 'centered' | 'two-column'
  showTechBadges?: boolean
  techBadges?: {
    icon: string
    label: string
    value: string
  }[]
}

const {
  title,
  description,
  trustText = '',
  trustCount = '',
  primaryButton,
  secondaryButton,
  heroImage,
  showAurora = true,
  layout = 'centered',
  showTechBadges = false,
  techBadges = [
    { icon: 'logos:figma', label: 'Made in', value: 'Figma' },
    { icon: 'logos:lit-icon', label: 'Powered by', value: 'Lit' },
    { icon: 'logos:react', label: 'Built for', value: 'React' },
  ],
} = Astro.props
---

<section class:list={['hero-section bg-color-surface text-color-default flex', layout === 'centered' ? 'pt-10 lg:pt-20' : '', layout === 'two-column' ? 'pt-4' : '']} data-theme="dark">
  <Container class="flex flex-1 items-start">
    <div
      class:list={[
        'flex h-full w-full flex-1 gap-12',
        layout === 'centered' ? 'flex-col items-center justify-center text-center' : '',
        layout === 'two-column' ? 'flex-row items-start lg:gap-16' : '',
      ]}
    >
      <!-- Text Content -->
      <div class:list={['flex flex-col', layout === 'centered' ? 'max-w-3xl items-center' : '', layout === 'two-column' ? 'order-2 flex-1 pt-16 lg:order-1' : '']}>
        <!-- Trust Badge -->
        <div class:list={['mb-6 items-center space-x-3', layout === 'centered' ? 'flex' : 'hidden']}>
          <div class="flex items-center -space-x-2">
            <img class="border-color-default h-6 w-6 rounded-full border-2" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face" alt="User" />
            <img class="border-color-default h-6 w-6 rounded-full border-2" src="https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=32&h=32&fit=crop&crop=face" alt="User" />
            <img class="border-color-default h-6 w-6 rounded-full border-2" src="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=32&h=32&fit=crop&crop=face" alt="User" />
          </div>
          <span>
            {trustText}
            <span class="font-bold">{trustCount}</span>
          </span>
        </div>

        <!-- Title & Description -->
        <div>
          <h1 class="font-sans-tight mb-4 flex flex-col text-5xl font-bold tracking-tight lg:text-6xl">
            {title.map((line) => <span>{line}</span>)}
          </h1>
          <p class="mb-12 text-xl font-normal">{description}</p>
        </div>

        <!-- Tech Badges (Conditional) -->
        {
          showTechBadges && (
            <div class="mb-12 flex flex-row items-center justify-start gap-2 lg:gap-4">
              {techBadges.map((badge, index) => (
                <>
                  <div class="flex flex-row items-center gap-2 lg:gap-3">
                    <Icon name={badge.icon} class="h-5 w-5" />
                    <p class="text-base">
                      <span class="font-normal">{badge.label} </span>
                      <span class="font-bold">{badge.value}</span>
                    </p>
                  </div>
                  {index < techBadges.length - 1 && <div class="bg-color-divider h-4 w-px" />}
                </>
              ))}
            </div>
          )
        }

        <!-- Buttons -->
        <div class="flex gap-3">
          <a href={secondaryButton.href} target="_blank">
            <plus-button kind="outlined">
              {secondaryButton.icon && <Icon name={secondaryButton.icon} class="h-5 w-5" />}
              {secondaryButton.text}
            </plus-button>
          </a>
          <a href={primaryButton.href} target="_blank">
            <plus-button kind="filled" status="primary">
              {primaryButton.text}
              {primaryButton.icon && <i class={primaryButton.icon} />}
            </plus-button>
          </a>
        </div>
      </div>

      <!-- Hero Image/Content -->
      <div class:list={['flex w-full flex-1', layout === 'two-column' ? 'order-1 pt-4 lg:order-2 lg:block' : '']}>
        {
          showAurora ? (
            <AuroraBackground minHeight="100%" class="lg:min-h-[500px]">
              <slot />
            </AuroraBackground>
          ) : (
            <slot />
          )
        }
      </div>
    </div>
  </Container>
</section>
