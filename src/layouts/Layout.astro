---
import { ClientRouter } from 'astro:transitions'
import { SEO } from 'astro-seo'

import { Navbar, Footer } from '@components/layout'

import '@fontsource-variable/inter/index.css'
import '@fontsource-variable/inter-tight/index.css'
import '@fortawesome/fontawesome-free/css/all.min.css'
import '../styles/global.css'
import '@plusui/library/dist/index.css'

export interface Props {
  title?: string
  description?: string
  keywords?: string
  image?: string
  footerMargin?: boolean
  theme?: 'light' | 'dark'
  headerTheme?: 'light' | 'dark'
  noNavbar?: boolean
  noFooter?: boolean
  headerBorder?: boolean
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString()

const resolvedImageWithDomain = new URL('/opengraph.jpg', Astro.site).toString()

const {
  title,
  description = 'Plus UI Library - UI Library with high-quality components for Astro, React, Vue and more. Build beautiful interfaces faster.',
  keywords = 'UI library, component library, Astro, React, Vue, design system, UI components, web development',
  image,
  footerMargin = true,
  theme = 'light',
  headerTheme = 'light',
  noNavbar = false,
  noFooter = false,
  headerBorder = false,
} = Astro.props

const makeTitle = title ? `${title} | Plus UI Library` : 'Plus UI Library - High-Quality UI Components'
const resolvedImage = image ? new URL(image, Astro.site).toString() : resolvedImageWithDomain
---

<!doctype html>
<html lang="en" data-theme={theme}>
  <head>
    <meta name="ahrefs-site-verification" content="a54245776ed86df2a377b4e6d7eccdde398a238e75b01d911c502af0702d121d">
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- SEO Meta Tags -->
    <meta name="keywords" content={keywords} />
    <meta name="author" content="Plus UI Team" />
    <meta name="robots" content="index, follow" />
    <meta name="theme-color" content="#1e40af" />
    
    <!-- Security Headers -->
    <meta http-equiv="X-Frame-Options" content="DENY" />
    <meta http-equiv="X-Content-Type-Options" content="nosniff" />
    <meta name="referrer" content="strict-origin-when-cross-origin" />
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://api.iconify.design https://fonts.googleapis.com https://fonts.gstatic.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.iconify.design; frame-ancestors 'none';" />

    <!-- Sitemap and Additional Links -->
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preconnect" href="https://api.iconify.design" />
    <link rel="dns-prefetch" href="https://vercel.app" />
    <link rel="dns-prefetch" href="https://plusui.com" />
    <link rel="preload" href="/_astro/fa-solid-900.woff2" as="font" type="font/woff2" crossorigin />
    <link rel="preload" href="/_astro/inter-latin-wght-normal.woff2" as="font" type="font/woff2" crossorigin />

    <!-- Structured Data -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "SoftwareApplication",
        "name": "Plus UI Library",
        "description": "High-quality UI component library for modern web development",
        "url": "https://plusui.com",
        "applicationCategory": "DeveloperApplication",
        "operatingSystem": "Web Browser",
        "offers": {
          "@type": "Offer",
          "price": "0",
          "priceCurrency": "USD"
        },
        "provider": {
          "@type": "Organization",
          "name": "Plus UI",
          "url": "https://plusui.com"
        }
      }
    </script>

    <SEO
      title={makeTitle}
      description={description}
      canonical={canonicalURL}
      twitter={{
        creator: '@plusui',
        site: '@plusui',
        card: 'summary_large_image',
      }}
      openGraph={{
        basic: {
          url: canonicalURL,
          type: 'website',
          title: makeTitle,
          image: resolvedImage,
        },
        image: {
          alt: 'Plus UI Library - High-Quality UI Components',
          width: 1200,
          height: 630,
        },
        optional: {
          locale: 'en_US',
          siteName: 'Plus UI Library',
        },
      }}
    />
    <style is:global>
      /* Critical CSS - Above the fold styles */
      * {
        box-sizing: border-box;
      }
      
      html {
        scroll-behavior: smooth;
        font-family: Inter Variable, Inter, ui-sans-serif, system-ui, sans-serif;
      }
      
      body {
        margin: 0;
        padding: 0;
        line-height: 1.6;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      
      /* Performance optimizations */
      img {
        content-visibility: auto;
        loading: lazy;
        max-width: 100%;
        height: auto;
      }

      /* Optimize font loading */
      @font-face {
        font-display: swap;
      }
      
      /* Font display optimization for all fonts */
      @font-face {
        font-family: 'Inter Variable';
        font-display: swap;
      }
      
      @font-face {
        font-family: 'Inter Tight Variable';
        font-display: swap;
      }
      
      @font-face {
        font-family: 'Font Awesome 6 Free';
        font-display: swap;
      }
      
    </style>

    <ClientRouter />
  </head>
  <body class="text-color-default bg-color-surface font-sans antialiased">
    {!noNavbar && <Navbar headerTheme={headerTheme} headerBorder={headerBorder} />}
    <slot />
    {!noFooter && <Footer margin={footerMargin} />}

    <script>
      import '@plusui/library/cdn/components/index.js'
    </script>

    <!-- Service Worker Registration -->
    <script>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js')
            .then((registration) => {
              console.log('SW registered: ', registration);
            })
            .catch((registrationError) => {
              console.log('SW registration failed: ', registrationError);
            });
        });
      }
    </script>

    <!-- Performance Monitoring (Development Only) -->
    <!-- <PerformanceMonitor /> -->
  </body>
</html>
